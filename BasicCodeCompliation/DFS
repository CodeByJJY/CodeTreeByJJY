# vertex를 시작으로 DFS를 이어나갔다.

def dfs(vertex):
    for curr_v in range(1, VERTICES_NUM + 1):
        if graph[vertex][curr_v] and not visited[curr_v]:
            print(curr_v)
            visited[curr_v] = True    # 방문표시
            dfs(curr_v)



#################################################################


# 다음 주소가 격자 내부인지 탐색
def in_range(x, y):
    return 0 <= x and x < 5 and 0 <= y and y < 5

# 다음 주소가 이동 가능한지 여부 판별
def can_go(x, y):
    # 1. 격자 내부인가?
    if not in range(x, y):
        return False
    
    # 2. 이미 방문했거나, 뱀이 있는 곳인가?
    if visited[x][y] or grid[x][y] == 0:
        return False
    
    return True

# DFS 탐색
def dfs(x, y):
    global order

    dxs, dys = [1, 0], [0, 1]

    for dx, dy in zip(dxs, dys):
        new_x, new_y = x + dx, y + dy

        if can_go(new_x, new_y):
            answer[new_x][new_y] = order
            order += 1
            visited[new_x][new_y] = 1
            dfs(new_x, new_y)
